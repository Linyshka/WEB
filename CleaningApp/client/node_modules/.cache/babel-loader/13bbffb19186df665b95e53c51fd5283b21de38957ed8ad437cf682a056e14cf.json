{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport const registration = async (email, password) => {\n  const {\n    data\n  } = await $host.post(\"/api/user/registration\", {\n    email,\n    password\n  });\n  return jwtDecode(data.token);\n};\nexport const login = async (email, password) => {\n  const data = await $host.post(\"/api/user/login\", {\n    email,\n    password\n  });\n  return jwt_decode(data.token);\n};\nexport const check = async () => {\n  const response = await $host.post(\"/api/auth/registration\");\n  return response;\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","registration","email","password","data","post","token","login","jwt_decode","check","response"],"sources":["/home/alina/WEB/CleaningApp/client/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\n\nexport const registration = async (email, password) => {\n  const {data} = await $host.post(\"/api/user/registration\", {\n    email,\n    password,\n  });\n  return jwtDecode(data.token);\n};\n\nexport const login = async (email, password) => {\n  const data = await $host.post(\"/api/user/login\", {\n    email,\n    password,\n  });\n  return jwt_decode(data.token);\n};\n\nexport const check = async () => {\n  const response = await $host.post(\"/api/auth/registration\");\n  return response;\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrD,MAAM;IAACC;EAAI,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,wBAAwB,EAAE;IACxDH,KAAK;IACLC;EACF,CAAC,CAAC;EACF,OAAOH,SAAS,CAACI,IAAI,CAACE,KAAK,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,IAAI,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,iBAAiB,EAAE;IAC/CH,KAAK;IACLC;EACF,CAAC,CAAC;EACF,OAAOK,UAAU,CAACJ,IAAI,CAACE,KAAK,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACM,IAAI,CAAC,wBAAwB,CAAC;EAC3D,OAAOK,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}