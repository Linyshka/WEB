{"ast":null,"code":"var _jsxFileName = \"/home/alina/WEB/CleaningApp/client/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Slider } from \"../../components/Slider/Slider\";\nimport \"./Main.css\";\nimport { getIp, getJoke } from \"../../http/api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [timezone, setTimezone] = useState();\n  const [joke, setJoke] = useState();\n  const currentDate = () => {\n    const now = new Date();\n    const day = currentDateTime.getDay();\n    const month = currentDateTime.getMoth();\n    const year = currentDateTime.getFullYear();\n    return `${day} ${month} ${year}`;\n  };\n  useEffect(() => {\n    try {\n      getIp().then(response => setTimezone(response.timezone)).catch(error => console.log(error));\n      getJoke().then(response => {\n        setJoke(response.setup + \" \" + response.punchline);\n      });\n    } catch (err) {\n      console.log(\"failed\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container timezone-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-start\",\n        children: timezone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-end\",\n        children: currentDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container timezone-container\",\n      children: joke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"8iWgEMtBr6dTgRbNNpgHBOW/+R0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Slider","getIp","getJoke","jsxDEV","_jsxDEV","Main","_s","timezone","setTimezone","joke","setJoke","currentDate","now","Date","day","currentDateTime","getDay","month","getMoth","year","getFullYear","then","response","catch","error","console","log","setup","punchline","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alina/WEB/CleaningApp/client/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Slider } from \"../../components/Slider/Slider\";\n\nimport \"./Main.css\";\nimport { getIp, getJoke } from \"../../http/api/api\";\n\nconst Main = () => {\n  const [timezone, setTimezone] = useState();\n\n  const [joke, setJoke] = useState();\n\n  const currentDate = () => {\n    const now = new Date();\n    const day = currentDateTime.getDay();\n    const month = currentDateTime.getMoth();\n    const year = currentDateTime.getFullYear();\n    return `${day} ${month} ${year}`;\n  }\n\n  useEffect(() => {\n    try {\n      getIp().then((response) => setTimezone(response.timezone)).catch((error) => console.log(error));\n      getJoke().then((response) => {\n        setJoke(response.setup + \" \" + response.punchline);\n      });\n    } catch (err) {\n      console.log(\"failed\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className='container timezone-container'>\n        <p className='timezone-start'>{timezone}</p>\n        <p className='timezone-end'>{currentDate()}</p>\n        </div>\n      <div className='container timezone-container'>{joke}</div>\n      <Slider />\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,gCAAgC;AAEvD,OAAO,YAAY;AACnB,SAASC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAElC,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,GAAG,GAAGC,eAAe,CAACC,MAAM,CAAC,CAAC;IACpC,MAAMC,KAAK,GAAGF,eAAe,CAACG,OAAO,CAAC,CAAC;IACvC,MAAMC,IAAI,GAAGJ,eAAe,CAACK,WAAW,CAAC,CAAC;IAC1C,OAAQ,GAAEN,GAAI,IAAGG,KAAM,IAAGE,IAAK,EAAC;EAClC,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAI;MACFG,KAAK,CAAC,CAAC,CAACoB,IAAI,CAAEC,QAAQ,IAAKd,WAAW,CAACc,QAAQ,CAACf,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MAC/FtB,OAAO,CAAC,CAAC,CAACmB,IAAI,CAAEC,QAAQ,IAAK;QAC3BZ,OAAO,CAACY,QAAQ,CAACK,KAAK,GAAG,GAAG,GAAGL,QAAQ,CAACM,SAAS,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAK2B,SAAS,EAAC,8BAA8B;MAAAD,QAAA,gBAC3C1B,OAAA;QAAG2B,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAAEvB;MAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C/B,OAAA;QAAG2B,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAEnB,WAAW,CAAC;MAAC;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACR/B,OAAA;MAAK2B,SAAS,EAAC,8BAA8B;MAAAD,QAAA,EAAErB;IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1D/B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAlCID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}