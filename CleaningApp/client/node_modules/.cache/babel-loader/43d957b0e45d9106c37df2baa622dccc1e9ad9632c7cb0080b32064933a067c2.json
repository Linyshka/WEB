{"ast":null,"code":"var _jsxFileName = \"/home/alina/WEB/CleaningApp/client/src/components/AppRoter.js\";\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from '../routes';\nimport Services from '../pages/Services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Swit, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: Component\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)), publicRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: Component\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Route","Routes","authRoutes","publicRoutes","Services","jsxDEV","_jsxDEV","AppRouter","isAuth","Swit","children","map","path","Component","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alina/WEB/CleaningApp/client/src/components/AppRoter.js"],"sourcesContent":["import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport { authRoutes, publicRoutes } from '../routes';\nimport Services from '../pages/Services';\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return (\n    <Swit>\n      {isAuth && authRoutes.map(({path, Component}) => \n        <Route key={path} path={path} component={Component} />\n      )}\n      {publicRoutes.map(({path, Component}) => \n        <Route key={path} path={path} component={Component} />\n      )}\n    </Swit>\n  );\n};\n\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,YAAY,QAAQ,WAAW;AACpD,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAG,KAAK;EACpB,oBACEF,OAAA,CAACG,IAAI;IAAAC,QAAA,GACFF,MAAM,IAAIN,UAAU,CAACS,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAC1CP,OAAA,CAACN,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACE,SAAS,EAAED;IAAU,GAAvCD,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CACvD,CAAC,EACAf,YAAY,CAACQ,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAClCP,OAAA,CAACN,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACE,SAAS,EAAED;IAAU,GAAvCD,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAACC,EAAA,GAZIZ,SAAS;AAcf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}