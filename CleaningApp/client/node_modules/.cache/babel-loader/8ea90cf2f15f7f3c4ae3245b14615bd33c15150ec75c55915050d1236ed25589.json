{"ast":null,"code":"import axios from \"axios\";\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n};\n$authHost.interceptors.request.use(authInterceptor);\nexport async function getIp() {\n  const ip = await fetch('https://ipapi.co/json/');\n  const response = await ip.json();\n  return response;\n}\nexport async function getQuote() {\n  const quote = await axios.create;\n  return quotes;\n}","map":{"version":3,"names":["axios","$authHost","create","baseURL","process","env","REACT_APP_API_URL","authInterceptor","config","headers","authorization","localStorage","getItem","interceptors","request","use","getIp","ip","fetch","response","json","getQuote","quote","quotes"],"sources":["/home/alina/WEB/CleaningApp/client/src/http/api/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n};\n\n$authHost.interceptors.request.use(authInterceptor);\n\nexport async function getIp() {\n  const ip = await fetch('https://ipapi.co/json/');\n  const response = await ip.json();\n  return response;\n} \n\nexport async function getQuote() {\n  const quote = await axios.create\n  return quotes;\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAGC,MAAM,IAAI;EAChCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOJ,MAAM;AACf,CAAC;AAEDP,SAAS,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;AAEnD,OAAO,eAAeS,KAAKA,CAAA,EAAG;EAC5B,MAAMC,EAAE,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;EAChD,MAAMC,QAAQ,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;EAChC,OAAOD,QAAQ;AACjB;AAEA,OAAO,eAAeE,QAAQA,CAAA,EAAG;EAC/B,MAAMC,KAAK,GAAG,MAAMtB,KAAK,CAACE,MAAM;EAChC,OAAOqB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}