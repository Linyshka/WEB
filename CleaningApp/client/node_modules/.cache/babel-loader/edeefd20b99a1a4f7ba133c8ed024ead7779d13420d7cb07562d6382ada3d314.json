{"ast":null,"code":"var _jsxFileName = \"/home/alina/WEB/CleaningApp/client/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Slider } from \"../../components/Slider/Slider\";\nimport \"./Main.css\";\nimport { getIp, getJoke } from \"../../http/api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [timezone, setTimezone] = useState();\n  const [lastNew, setLastNew] = useState();\n  const [joke, setJoke] = useState();\n  const currentDate = currentDateTime => {\n    const day = currentDateTime.getDate();\n    const month = currentDateTime.getMonth();\n    const year = currentDateTime.getFullYear();\n    return `${day}.${month + 1}.${year}`;\n  };\n  useEffect(() => {\n    try {\n      getIp().then(response => setTimezone(response.timezone)).catch(error => console.log(error));\n      getJoke().then(response => {\n        setJoke(response.setup + \" \" + response.punchline);\n      });\n      getLast;\n    } catch (err) {\n      console.log(\"failed\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container timezone-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-start\",\n        children: timezone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-end\",\n        children: currentDate(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container timezone-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-start\",\n        children: \"\\u0428\\u0443\\u0442\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timezone-end\",\n        children: joke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lastNew\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"EPfpYF9nUasZSHoVTtkZEf0JPGc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Slider","getIp","getJoke","jsxDEV","_jsxDEV","Main","_s","timezone","setTimezone","lastNew","setLastNew","joke","setJoke","currentDate","currentDateTime","day","getDate","month","getMonth","year","getFullYear","then","response","catch","error","console","log","setup","punchline","getLast","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Date","_c","$RefreshReg$"],"sources":["/home/alina/WEB/CleaningApp/client/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Slider } from \"../../components/Slider/Slider\";\n\nimport \"./Main.css\";\nimport { getIp, getJoke } from \"../../http/api/api\";\n\nconst Main = () => {\n  const [timezone, setTimezone] = useState();\n  const [lastNew, setLastNew] = useState();\n\n  const [joke, setJoke] = useState();\n\n  const currentDate = (currentDateTime) => {\n    const day = currentDateTime.getDate();\n    const month = currentDateTime.getMonth();\n    const year = currentDateTime.getFullYear();\n    return `${day}.${month + 1}.${year}`;\n  };\n\n  useEffect(() => {\n    try {\n      getIp()\n        .then((response) => setTimezone(response.timezone))\n        .catch((error) => console.log(error));\n      getJoke().then((response) => {\n        setJoke(response.setup + \" \" + response.punchline);\n      });\n      getLast\n    } catch (err) {\n      console.log(\"failed\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className='container timezone-container'>\n        <p className='timezone-start'>{timezone}</p>\n        <p className='timezone-end'>{currentDate(new Date())}</p>\n      </div>\n      <div className='container timezone-container'>\n        <p className='timezone-start'>Шутка:</p>\n        <p className='timezone-end'>{joke}</p>\n      </div>\n      <Slider />\n      <div className='lastNew'></div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}